import os

Import("env")

env.AppendUnique(
    CCFLAGS=[
        "-fmessage-length=0",
        "-fsigned-char",
        "-ffunction-sections",
        "-Wnull-dereference",
        "-fdata-sections",
        "-mcpu=cortex-a9",
        "-marm",
        "-mfpu=neon",
        "-fsigned-char",
        "-mfloat-abi=hard",
        "-mthumb-interwork",
        "-mlittle-endian",
        "-flto",
        "-fdiagnostics-parseable-fixits",
    ],
    ASMPATH=[
        "src/NE10/common",
    ],
    CPPPATH=[
        "src/NE10/common",
        "src/drivers/RZA1",
        "src/drivers/All_CPUs/usb/userdef",
        "src/drivers/All_CPUs/usb",
        "src/drivers/All_CPUs/dmac",
        "src/drivers/All_CPUs/uart_all_cpus",
        "src/drivers/All_CPUs/rspi_all_cpus",
        "src/drivers/All_CPUs/oled_low_level_all_cpus",
        "src/drivers/RZA1/compiler/asm/inc/",
        "src/drivers/RZA1/mtu",
        "src/drivers/RZA1/oled",
        "src/drivers/RZA1/spibsc",
        "src/drivers/RZA1/sdhi/src",
        "src/drivers/RZA1/sdhi/src/sd/sdio",
        "src/drivers/RZA1/sdhi/src/sd",
        "src/drivers/RZA1/sdhi/userdef",
        "src/drivers/RZA1/sdhi/src/sd/access",
        "src/drivers/RZA1/sdhi/inc",
        "src/drivers/RZA1/sdhi",
        "src/drivers/RZA1/rspi",
        "src/drivers/RZA1/sdhi/src/sd/inc",
        "src/drivers/RZA1/sdhi/src/sd/inc/access",
        "src/drivers/RZA1/stb/",
        "src/drivers/RZA1/usb/r_usb_basic",
        "src/drivers/RZA1/usb/r_usb_basic/src",
        "src/drivers/RZA1/usb/r_usb_basic/src/hw/inc",
        "src/drivers/RZA1/usb/r_usb_basic/src/driver",
        "src/drivers/RZA1/usb/r_usb_basic/src/hw",
        "src/drivers/RZA1/usb/r_usb_basic/src/driver/inc",
        "src/drivers/RZA1/usb/r_usb_hmidi",
        "src/drivers/RZA1/usb/r_usb_hmidi/src/inc",
        "src/drivers/RZA1/usb/userdef",
        "src/drivers/RZA1/intc",
        "src/drivers/RZA1/system",
        "src/drivers/RZA1/system/iobitmasks",
        "src/drivers/RZA1/system/iodefines",
        "src/drivers/RZA1/bsc",
        "src/drivers/RZA1/dma",
        "src/drivers/RZA1/gpio",
        "src/drivers/RZA1/ssi",
        "src/drivers/RZA1/uart",
        "src/drivers/All_CPUs",
        "src/drivers/All_CPUs/ssi_all_cpus",
        "src/NE10/modules",
        "src/NE10/inc",
        "src",
        "src/fatfs",
    ],
)
env["ASPATH"] = " {}".format(" ".join(['-I"{}"'.format(inc) for inc in env["ASMPATH"]]))


if env["BUILD_TYPE"] == "debug":
    env.AppendUnique(
        CPPDEFINES=["IN_HARDWARE_DEBUG=1", "ENABLE_TEXT_OUTPUT=1", "HAVE_RTT=1"],
        CCFLAGS=[
            "-Og",
            "-g",
            "-ggdb",
            "-Wstack-usage=100",
        ],
    )
else:  # env["BUILD_TYPE"] == 'release'
    env.AppendUnique(
        CPPDEFINES=["IN_HARDWARE_DEBUG=0", "ENABLE_TEXT_OUTPUT=0", "HAVE_RTT=0"],
        CCFLAGS=[
            "-O2",
            "-flto",
            "-Wstack-usage=1000",
        ],
    )

if env["BUILD_HARDWARE"] == "7seg":
    env.AppendUnique(CPPDEFINES=["HAVE_OLED=0"])
else:  # env["BUILD_HARDWARE"] == "oled"
    env.AppendUnique(CPPDEFINES=["HAVE_OLED=1"])

env.AppendUnique(
    LINKFLAGS=[
        '-T$LINKER_SCRIPT_PATH',
        "-Wl,--start-group",
        "-Wl,--end-group",
        "-nostartfiles",
        "-Xlinker",
        "--gc-sections",
        '-Wl,-Map,"$MAPFILE"',
        "-flto",
        "-Wl,-estart",
        "--specs=rdimon.specs",
    ],
)
